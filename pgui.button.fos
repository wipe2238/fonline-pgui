//
// PGUI
// Primitive GUI for FOnline based games
// Wipe/Rotators
//

#ifndef __PGUI_BUTTON__
#define __PGUI_BUTTON__

#include "pgui.fos"

shared class PGUIButton : PGUIElement
{
    PGUISprite@ picUp;
    PGUISprite@ picDown;
    PGUISprite@ picOff;

    bool toggleMode;
    bool off;
    bool draw;

    int colorUpBackground;
    int colorUpFrame;
    int colorDownBackground;
    int colorDownFrame;
    int colorOffBackground;
    int colorOffFrame;

    PGUIButton( uint width, uint height )
    {
        super();
        this.PGUIButtonInit();

        this.Width = width;
        this.Height = height;
        this.draw = true;
    }

    PGUIButton( PGUISprite@ spriteUp, PGUISprite@ spriteDown )
    {
        super();
        this.PGUIButtonInit();

        if( valid(spriteUp) )
        {
            @this.picUp = spriteUp;
            @this.picUp.parent = this;
        }

        if( valid(spriteDown) )
        {
            @this.picDown = spriteDown;
            @this.picDown.parent = this;
        }
        this.draw = false;
    }

    private void PGUIButtonInit() final
    {
        this.active = true;

        this.toggleMode = this.off = false;

        this.colorUpFrame = this.colorDownFrame = PGUI_RGBi(0,255,0);
        this.colorUpBackground = PGUI_RGBAi(0,255,0,125);
        this.colorDownBackground = PGUI_RGBAi(0,255,0,220);
        this.colorOffBackground = PGUI_RGBAi(100,100,100,100);
        this.colorOffFrame = PGUI_RGBi(100,100,100);
    }

    void Click() override
    {
        if( this.toggleMode )
            this.off = !this.off;
    }

    void Draw() override
    {
        if( this.toggleMode && !this.mousePressed && this.off )
        {
            if( this.draw )
            {
                this.DrawBackground( this.colorOffBackground );
                this.DrawFrame( this.colorOffFrame );
            }
            else if( !this.draw && valid(this.picOff) )
                this.picOff.Draw();
        }
        else
        {
            if( !this.mousePressed )
            {
                if( this.draw )
                {
                    this.DrawBackground( this.colorUpBackground );
                    this.DrawFrame( this.colorUpFrame );
                }
                else if( !this.draw && valid(this.picUp) )
                    this.picUp.Draw();
            }
            else
            {
                if( this.draw )
                {
                    this.DrawBackground( this.colorDownBackground );
                    this.DrawFrame( this.colorDownFrame );
                }
                else if( !this.draw && valid(this.picDown) )
                    this.picDown.Draw();
            }
        }

        PGUIElement::Draw();
    }
};

#endif // __PGUI_BUTTON__ //
